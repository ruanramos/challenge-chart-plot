{"ast":null,"code":"var _jsxFileName = \"/home/ruanramos/Dropbox/Codes and Projects/Estudos/ReactJS/react-tutorial/src/Components/Inputs.js\";\nimport React, { Component } from 'react';\nimport './Inputs.css';\n\nclass Inputs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const textareaLineHeight = 24;\n      const _this$state = this.state,\n            minRows = _this$state.minRows,\n            maxRows = _this$state.maxRows;\n      const previousRows = event.target.rows;\n      event.target.rows = minRows; // reset number of rows in textarea \n\n      const currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\n\n      if (currentRows === previousRows) {\n        event.target.rows = currentRows;\n      }\n\n      if (currentRows >= maxRows) {\n        event.target.rows = maxRows;\n        event.target.scrollTop = event.target.scrollHeight;\n      }\n\n      this.setState({\n        value: event.target.value,\n        rows: currentRows < maxRows ? currentRows : maxRows\n      });\n    };\n\n    this.state = {\n      value: 'Input the events here',\n      rows: 25,\n      minRows: 25,\n      maxRows: 100\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"textarea\", {\n      name: \"text\",\n      rows: this.state.rows,\n      value: this.state.value,\n      id: \"inputBox\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }) // <Container fluid={true} id=\"input-wrapper\">\n    //     <Row noGutters={true} >\n    //         <Col>\n    //         </Col>\n    //     </Row>\n    // </Container >\n    ;\n  }\n\n}\n\nexport default Inputs;","map":{"version":3,"sources":["/home/ruanramos/Dropbox/Codes and Projects/Estudos/ReactJS/react-tutorial/src/Components/Inputs.js"],"names":["React","Component","Inputs","constructor","props","handleChange","event","textareaLineHeight","state","minRows","maxRows","previousRows","target","rows","currentRows","scrollHeight","scrollTop","setState","value","bind","handleSubmit","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,YAbmB,GAaHC,KAAD,IAAW;AACtB,YAAMC,kBAAkB,GAAG,EAA3B;AADsB,0BAEO,KAAKC,KAFZ;AAAA,YAEdC,OAFc,eAEdA,OAFc;AAAA,YAELC,OAFK,eAELA,OAFK;AAItB,YAAMC,YAAY,GAAGL,KAAK,CAACM,MAAN,CAAaC,IAAlC;AACAP,MAAAA,KAAK,CAACM,MAAN,CAAaC,IAAb,GAAoBJ,OAApB,CALsB,CAKO;;AAE7B,YAAMK,WAAW,GAAG,CAAC,EAAER,KAAK,CAACM,MAAN,CAAaG,YAAb,GAA4BR,kBAA9B,CAArB;;AAEA,UAAIO,WAAW,KAAKH,YAApB,EAAkC;AAC9BL,QAAAA,KAAK,CAACM,MAAN,CAAaC,IAAb,GAAoBC,WAApB;AACH;;AAED,UAAIA,WAAW,IAAIJ,OAAnB,EAA4B;AACxBJ,QAAAA,KAAK,CAACM,MAAN,CAAaC,IAAb,GAAoBH,OAApB;AACAJ,QAAAA,KAAK,CAACM,MAAN,CAAaI,SAAb,GAAyBV,KAAK,CAACM,MAAN,CAAaG,YAAtC;AACH;;AAED,WAAKE,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAEZ,KAAK,CAACM,MAAN,CAAaM,KADV;AAEVL,QAAAA,IAAI,EAAEC,WAAW,GAAGJ,OAAd,GAAwBI,WAAxB,GAAsCJ;AAFlC,OAAd;AAIH,KAnCkB;;AAEf,SAAKF,KAAL,GAAa;AACTU,MAAAA,KAAK,EAAE,uBADE;AAETL,MAAAA,IAAI,EAAE,EAFG;AAGTJ,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAOA,SAAKL,YAAL,GAAoB,KAAKA,YAAL,CAAkBc,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AA0BDE,EAAAA,MAAM,GAAG;AACL,WACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWK,IAFrB;AAGI,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWU,KAHtB;AAII,MAAA,EAAE,EAAC,UAJP;AAKI,MAAA,QAAQ,EAAE,KAAKb,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAQI;AACA;AACA;AAEA;AACA;AACA;AAdJ;AAiBH;;AAxD0B;;AA2D/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Inputs.css';\n\nclass Inputs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 'Input the events here',\n            rows: 25,\n            minRows: 25,\n            maxRows: 100,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = (event) => {\n        const textareaLineHeight = 24;\n        const { minRows, maxRows } = this.state;\n\n        const previousRows = event.target.rows;\n        event.target.rows = minRows; // reset number of rows in textarea \n\n        const currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\n\n        if (currentRows === previousRows) {\n            event.target.rows = currentRows;\n        }\n\n        if (currentRows >= maxRows) {\n            event.target.rows = maxRows;\n            event.target.scrollTop = event.target.scrollHeight;\n        }\n\n        this.setState({\n            value: event.target.value,\n            rows: currentRows < maxRows ? currentRows : maxRows,\n        });\n    };\n\n    render() {\n        return (\n            <textarea\n                name=\"text\"\n                rows={this.state.rows}\n                value={this.state.value}\n                id=\"inputBox\"\n                onChange={this.handleChange}\n            />\n            // <Container fluid={true} id=\"input-wrapper\">\n            //     <Row noGutters={true} >\n            //         <Col>\n\n            //         </Col>\n            //     </Row>\n            // </Container >\n\n        );\n    }\n}\n\nexport default Inputs;"]},"metadata":{},"sourceType":"module"}